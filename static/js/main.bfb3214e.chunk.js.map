{"version":3,"sources":["super components/c1-SuperInputText/SuperInputText.module.css","super components/c2-SuperButton/SuperButton.module.css","super components/c3-SuperCheckbox/SuperCheckbox.module.css","login/Login.tsx","registration/Registration.tsx","profile/Profile.tsx","404/404.tsx","password recovery/PassRecovery.tsx","entering a new password/EnterNewPass.tsx","super components/c1-SuperInputText/SuperInputText.tsx","super components/c2-SuperButton/SuperButton.tsx","super components/c3-SuperCheckbox/SuperCheckbox.tsx","super components/SuperComponents.tsx","routes/RouteComponent.tsx","routes/Header.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Login","Registration","Profile","Error404","PassRecovery","EnterNewPass","SuperInputText","type","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","className","restProps","finalSpanClassName","s","finalInputClassName","input","errorInput","superInput","required","e","currentTarget","value","key","SuperButton","red","finalClassName","button","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","SuperComponents","PATH","RoutesComponent","path","element","to","Header","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bfb3214e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"SuperInputText_input__1-Q7a\",\"superInput\":\"SuperInputText_superInput__2jixS\",\"errorInput\":\"SuperInputText_errorInput__1sCc3\",\"error\":\"SuperInputText_error__2xXL6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__19_3c\",\"red\":\"SuperButton_red__2V7UC\",\"button\":\"SuperButton_button__20bGJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2LyaE\",\"spanClassName\":\"SuperCheckbox_spanClassName___Zrqa\"};","import React from \"react\";\r\n\r\nexport function Login() {\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport function Registration(){\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    )\r\n\r\n}","import React from \"react\";\r\n\r\nexport function Profile(){\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    )\r\n\r\n}","import React from \"react\";\r\n\r\nexport function Error404(){\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport function PassRecovery(){\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    )\r\n\r\n}","import React from \"react\";\r\n\r\nexport function EnterNewPass(){\r\n    return (\r\n        <div>\r\n\r\n        </div>\r\n    )\r\n\r\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        onEnter // если есть пропс onEnter\n        && e.key === 'Enter' // и если нажата кнопка Enter\n        && onEnter() // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n    const finalInputClassName = `${s.input} ${s.error ? s.errorInput : s.superInput}` // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input required\n                type={'text'}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${s.button} ${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React from \"react\";\r\nimport SuperInputText from \"./c1-SuperInputText/SuperInputText\";\r\nimport SuperButton from \"./c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"./c3-SuperCheckbox/SuperCheckbox\";\r\n\r\nexport function SuperComponents() {\r\n    return (\r\n        <div>\r\n            <SuperInputText/>\r\n            <SuperButton/>\r\n            <SuperCheckbox/>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {Navigate, Route, Routes} from \"react-router-dom\";\r\nimport {Login} from './../login/Login'\r\nimport {Registration} from \"../registration/Registration\";\r\nimport {Profile} from \"../profile/Profile\";\r\nimport {Error404} from \"../404/404\";\r\nimport {PassRecovery} from \"../password recovery/PassRecovery\";\r\nimport {EnterNewPass} from \"../entering a new password/EnterNewPass\";\r\nimport {SuperComponents} from \"../super components/SuperComponents\";\r\n\r\nexport const PATH = {\r\n    LOGIN: '/login',\r\n    REGISTRATION: '/registration',\r\n    PROFILE: '/profile',\r\n    ERROR404: '/error404',\r\n    PASS_RECOVERY: '/passrecovery',\r\n    ENTER_NEW_PASS: '/enternewpass',\r\n    SUPER_COMPONENTS: '/supercomponents'\r\n}\r\n\r\nexport function RoutesComponent() {\r\n    return (\r\n        <div>\r\n            <Routes>\r\n\r\n                <Route path='/' element={<Navigate to={PATH.LOGIN}/>}/>\r\n\r\n                <Route path={PATH.LOGIN} element={<Login/>}/>\r\n\r\n                <Route path={PATH.REGISTRATION} element={<Registration/>}/>\r\n\r\n                <Route path={PATH.PROFILE} element={<Profile/>}/>\r\n\r\n                <Route path={PATH.PASS_RECOVERY} element={<PassRecovery/>}/>\r\n\r\n                <Route path={PATH.ENTER_NEW_PASS} element={<EnterNewPass/>}/>\r\n\r\n                <Route path={PATH.SUPER_COMPONENTS} element={<SuperComponents/>}/>\r\n\r\n                <Route element={<Error404/>}/>\r\n\r\n            </Routes>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"./RouteComponent\";\r\n\r\nexport function Header() {\r\n    return (\r\n        <div>\r\n\r\n            <span><NavLink to={PATH.LOGIN}>Login</NavLink></span>\r\n\r\n            <span><NavLink to={PATH.REGISTRATION}>Registration</NavLink></span>\r\n\r\n            <span><NavLink to={PATH.PROFILE}>Profile</NavLink></span>\r\n\r\n            <span><NavLink to={PATH.ERROR404}>Error404</NavLink></span>\r\n\r\n            <span><NavLink to={PATH.PASS_RECOVERY}>Pass recovery</NavLink></span>\r\n\r\n            <span><NavLink to={PATH.ENTER_NEW_PASS}>Enter new pass</NavLink></span>\r\n\r\n            <span><NavLink to={PATH.SUPER_COMPONENTS}>Super components</NavLink></span>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\nimport './App.css';\nimport {RoutesComponent} from \"./routes/RouteComponent\";\nimport {Header} from \"./routes/Header\";\nimport {HashRouter} from \"react-router-dom\";\n\nfunction App() {\n    return (\n        <div>\n            <HashRouter>\n                <RoutesComponent/>\n                <Header/>\n            </HashRouter>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}